# .buildkite/pipeline.yml
env:
  PATH: "/var/lib/buildkite-agent/.nvm/versions/node/v20.17.0/bin:/var/lib/buildkite-agent/.local/bin:$PATH"

steps:
  - label: ":python: Backend Setup, Lint, and Test"
    command:
    - cd backend
    - chmod +x setup.sh
    - ./setup.sh
    env:
      PYTHONUNBUFFERED: "1"
      PATH: "$HOME/.local/bin:$PATH"

  # - label: ":python: Backend Linting"
  #   command:
  #     - cd backend
  #     - python3 -m pip install flake8
  #     - python3 -m flake8 .

  - label: ":node: Frontend CI Setup"
    command:
      - cd frontend
      - npm ci
      - npm run ci
    artifact_paths:
      # - "frontend/node_modules/**/*"
      - "frontend/build/**/*"

  - label: ":lock: Security Scan"
    command:
      - python3 -m pip install --user bandit safety
      - bandit -r backend -f custom -c backend/.bandit
      - safety check -r backend/requirements.txt
      # - cd frontend && npm audit


  - label: ":docker: Docker Login"
    command:
      # - echo $$DOCKER_PASSWORD | docker login -u $$DOCKER_USERNAME --password-stdin
       - docker login -u "$(buildkite-agent secret get DOCKER_USERNAME)" -p "$DOCKER_PASSWORD"
  # - label: ":docker: Build Frontend Image"
  #   command:
  #     - cd frontend
  #     - docker build -t todo-frontend:$BUILDKITE_BUILD_NUMBER .

  # - label: ":docker: Build Backend Image"
  #   command:
  #     - cd backend
  #     - docker build -t todo-backend:$BUILDKITE_BUILD_NUMBER .

  # - wait

  # - label: ":kubernetes: Deploy to Minikube"
  #   command:
  #     - kubectl apply -f k8s/
  #     - kubectl set image deployment/todo-backend todo-backend=todo-backend:$BUILDKITE_BUILD_NUMBER
  #     - kubectl set image deployment/todo-frontend todo-frontend=todo-frontend:$BUILDKITE_BUILD_NUMBER

  # - wait

  # - label: ":test_tube: Integration Tests"
  #   command:
  #     - cd tests
  #     - npm install
  #     - npm run integration-tests

  # - label: ":chart_with_upwards_trend: Performance Tests"
  #   command:
  #     - cd tests
  #     - npm install
  #     - npm run performance-tests
